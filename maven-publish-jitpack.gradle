// 发布配置 https://developer.android.google.cn/studio/build/maven-publish-plugin?hl=en#groovy
apply plugin: 'maven-publish'

// ----------------------- 在gradle.properties下配置

// 完整结构如下 [groupId]:[artifactId]:[version]
// 公司或者组织域名倒序
def _groupId = hasProperty('POM_GROUP_ID') ? POM_GROUP_ID : 'com.github.y1xian'
// 项目名 (github后需带项目名)
def _groupName = hasProperty("POM_NAME") ? POM_NAME : 'android'
// 模块名
def _artifactId = hasProperty("POM_ARTIFACT_ID") ? POM_ARTIFACT_ID : 'core'
// 版本号
def _version = hasProperty('POM_VERSION') ? POM_VERSION : '1.0.0-SNAPSHOT'
// 类型，aar、jar、aab
def _packaging = hasProperty('POM_PACKAGING') ? POM_PACKAGING : 'aar'

println("===> groupId: $_groupId ,groupName $_groupName ,artifactId: $_artifactId , version: $_version , packaging: $_packaging ")

// ----------------------- 扩展方法

// java插件
def hasJavaPlugin = {
    if (plugins.hasPlugin("java-library") || plugins.hasPlugin('java')) {
        return true
    }
    return false
}
// android插件
def hasAndroidPlugin = {
    if (plugins.hasPlugin("com.android.library")) {
        return true
    }
    return false
}


// 快照版本，则为本地maven
def isSnapshot = {
    return _version.endsWith("SNAPSHOT")
}
println("===> 版本号 $_version $isSnapshot")

// -----------------------

// 不使用缓存，使用仓库中最新的包
configurations.all {
    // 动态版本 x.x.+
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    //  变化版本 x.x.x
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

task sourceJar(type: Jar) {
    if (hasAndroidPlugin()) {
        println "===> Android"
        from android.sourceSets.main.java.srcDirs
        archiveClassifier = 'sources'
    } else if (hasJavaPlugin()) {
        println "===> Java"
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }
}

// ----------------------- 发布maven配置

afterEvaluate {
    publishing {
        if (isSnapshot) {
            // 本地测试配置
            // 发布配置
            publications {
                // 起个啥名都行，发布路径 Gradle/Tasks/publishing/publish
                debug(MavenPublication) {
                    from components.debug
                    version = _version
                    groupId = "$_groupId.$_groupName"
                }
            }
            // 发布到本地仓
            repositories {
                maven {
                    url = uri(LOCAL_MAVEN_DIR)
                }
            }
        } else {
            // 发布到 jitpack.io
            publications {
                release(MavenPublication) {
                    from components.release
                    groupId = _groupId
                }
            }
        }
    }
}
